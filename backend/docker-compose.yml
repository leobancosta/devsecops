version: "3.7"
services:

    emp.db:
        image: mysql:5.7
        container_name: mysql_emp
        ports:
            - "3306:3306"
        restart: always
        volumes:
            - ./mysql_data/emp:/var/lib/mysql
            - ./dso-mysql/emp/init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            MYSQL_ROOT_PASSWORD: dsoempdb
            MYSQL_DATABASE: dso
            MYSQL_USER: dsoemp
            MYSQL_PASSWORD: dsopass
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            timeout: 20s
            retries: 5
        networks:
            emp_network:
                ipv4_address: 172.10.10.10

    dept.db:
        image: mysql:5.7
        container_name: mysql_dept
        restart: always
        ports:
            - "3307:3306"
        volumes:
            - ./mysql_data/dept:/var/lib/mysql
            - ./dso-mysql/dept/init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            MYSQL_ROOT_PASSWORD: dsodeptdb
            MYSQL_DATABASE: dso
            MYSQL_USER: dsodept
            MYSQL_PASSWORD: dsopass
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            timeout: 20s
            retries: 5
        networks:
            dept_network:
                ipv4_address: 172.11.11.10

    role.db:
        image: mysql:5.7
        container_name: mysql_role
        restart: always
        ports:
            - "3310:3306"
        volumes:
            - ./mysql_data/role:/var/lib/mysql
            - ./dso-mysql/role/init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            MYSQL_ROOT_PASSWORD: dsoroledb
            MYSQL_DATABASE: dso
            MYSQL_USER: dsorole
            MYSQL_PASSWORD: dsopass
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            timeout: 20s
            retries: 5
        networks:
            role_network:
                ipv4_address: 172.14.14.10

    emp.service:
        build:
            context: .
            dockerfile: ./dso-microservices/EmpService/Dockerfile
        container_name: emp-service
        depends_on:
            - emp.db
        restart: always
        networks:
            emp_network:
                ipv4_address: 172.10.10.11

    dept.service:
        command: sleep 240
        build:
            context: .
            dockerfile: ./dso-microservices/DeptService/Dockerfile
        container_name: dept-service
        depends_on:
            - dept.db
        restart: always
        networks:
            dept_network:
                ipv4_address: 172.11.11.11

    role.service:
        build:
            context: .
            dockerfile: ./dso-microservices/RoleService/Dockerfile
        container_name: role-service
        depends_on:
            - role.db
        restart: always
        networks:
            role_network:
                ipv4_address: 172.14.14.11

networks:
    emp_network:
        driver: bridge
        driver_opts:
            com.docker.network.enable.ipv6: "false"
        ipam:
            driver: default
            config:
                - subnet: 172.10.10.0/24

    dept_network:
        driver: bridge
        driver_opts:
            com.docker.network.enable.ipv6: "false"
        ipam:
            driver: default
            config:
                - subnet: 172.11.11.0/24

    role_network:
        driver: bridge
        driver_opts:
            com.docker.network.enable.ipv6: "false"
        ipam:
            driver: default
            config:
                - subnet: 172.14.14.0/24